input {
	tcp {
		port => 6002
		type => "BRO_dns"
	}
}

filter {
	if [type] == "BRO_dns" {
		grok {
			match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<SrcIP>(.*?))\t(?<SrcPort>(.*?))\t(?<DstIP>(.*?))\t(?<DstPort>(.*?))\t(?<proto>(.*?))\t(?<trans_id>(.*?))\t(?<query>(.*?))\t(?<qclass>(.*?))\t(?<qclass_name>(.*?))\t(?<qtype>(.*?))\t(?<qtype_name>(.*?))\t(?<rcode>(.*?))\t(?<rcode_name>(.*?))\t(?<AA>(.*?))\t(?<TC>(.*?))\t(?<RD>(.*?))\t(?<RA>(.*?))\t(?<Z>(.*?))\t(?<answers>(.*?))\t(?<TTLs>(.*?))\t(?<rejected>(.*))" ]
		}

		if [bro_host] {
			mutate {
				replace => [ "host", "%{bro_host}" ]
			}
		}
		mutate {
			add_tag => [ "BRO" ]
		}
		mutate {
			convert => [ "SrcPort", "integer" ]
			convert => [ "DstPort", "integer" ]
		}
		date {
			match => [ "ts", "UNIX" ]
		}
	}
}

output {
	if [type] == "BRO_dns" {
		#stdout { codec => rubydebug }
		elasticsearch {
			cluster => "heartland"
			protocol => "http"
			embedded => false
			index => "bro-%{+YYYY.MM.dd}"
		}
	}
						 
}
