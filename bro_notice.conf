input {
	tcp {
		port => 6005
		type => "BRO_notice"
	}
}

filter {
	if [message] =~ /^#/ {
		drop {  }
	} else {
		if [type] == "BRO_notice" {
			grok { 
				match => [ "message", "(?<ts>(.*?))\t(?<uid>(.*?))\t(?<SrcIP>(.*?))\t(?<SrcPort>(.*?))\t(?<id.resp_h>(.*?))\t(?<id.resp_p>(.*?))\t(?<fuid>(.*?))\t(?<file_mime_type>(.*?))\t(?<file_desc>(.*?))\t(?<proto>(.*?))\t(?<note>(.*?))\t(?<msg>(.*?))\t(?<sub>(.*?))\t(?<src>(.*?))\t(?<dst>(.*?))\t(?<p>(.*?))\t(?<n>(.*?))\t(?<peer_descr>(.*?))\t(?<actions>(.*?))\t(?<suppress_for>(.*?))\t(?<dropped>(.*?))\t(?<remote_location.country_code>(.*?))\t(?<remote_location.region>(.*?))\t(?<remote_location.city>(.*?))\t(?<remote_location.latitude>(.*?))\t(?<remote_location.longitude>(.*))" ]
			}
			if [bro_host] {
				mutate {
					replace => [ "host", "%{bro_host}" ]
				}
			}
			mutate {
				add_tag => [ "BRO" ]
			}
			mutate {
				convert => [ "SrcPort", "integer" ]
				convert => [ "id.resp_p", "integer" ]
			}
			date {
				match => [ "ts", "UNIX" ]
			}
		}
	}
	
}

output {
	if [type] == "BRO_notice" {
		elasticsearch {
			index => "bro-%{+YYYY.MM.dd}"
		}
	}
}
