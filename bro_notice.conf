# Author: Justin Henderson
# Email: jhenderson@tekrefresh.comes
# Last Update: 5/5/2016
#
# This conf file is based on accepting logs for notice.log from Bro systems
input {
  file {
    type => "bro_notice"
    start_position => "end"
    sincedb_path => "/var/tmp/.bro_notice_sincedb" 
    # Edit the following path to reflect the location of your log files. You can also change the extension if you use something else
    path => "/nsm/bro/logs/current/notice.log"
  }
}

filter {
  if [type] == "bro_notice" {
    # This is the initial parsing of the log
    csv {
      columns => ["ts","uid","SourceIP","SourcePort","DestinationIP","DestinationPort","fuid","FileMIMEType","FileDescription","Protocol","Note","Message","SubMessage","src","dst","p","n","PeerDescription","Actions","SuppressFor","Dropped","DestinationCountryCode","DestinationRegion","DestinationCity","DestinationLatitude","DestinationLongitude"]
      separator => "	"
    }
    # I recommend changing the field types below to integer so searches can do greater than or less than
    # and also so math functions can be ran against them
    mutate {
      convert => [ "SrcPort", "integer" ]
      convert => [ "DstPort", "integer" ]
      convert => [ "p", "integer" ]
      convert => [ "n", "integer" ]
      convert => [ "SuppressFor", "float" ]
    }
    if [SourceIP] == "-" {
      mutate {
        remove_field => ["SourceIP"]
      }
    }
    if [DestinationIP] == "-" {
      mutate {
        remove_field => ["DestinationIP"]
      }
    }
    if [SourcePort] == "-" {
      mutate {
        remove_field => ["SourcePort"]
      }
    }
    if [DestinationPort] == "-" {
      mutate {
        remove_field => ["DestinationPort"]
      }
    }

    if [SourceIP] {
      geoip {
        source => "SourceIP"
	target => "SourceGeo"
      }
    }
    if [DestinationIP]{
      geoip {
        source => "DestinationIP"
	target => "DestinationGeo"
      }
    }
    date {
      match => [ "ts", "UNIX" ]
    }
  }
}

output {
  if [type] == "bro_notice" {
    #stdout { codec => rubydebug }
    elasticsearch {
      # Due to the volume of bro logs I like to save them to a seperate index.  This makes it easy to change retention
      # You can uncomment the index line below if you would like all logs to be in the same logstash index
      index => "logstash-bro-%{+YYYY.MM.dd}"
    }
  }
}
