input {
  file { 
    path => ["/nsm/sensor_data/SecurityOnion-eth1/eve.json"]
    sincedb_path => ["/var/lib/logstash/suricata"]
    codec =>   json 
    type => "suricata" 
  }

}

filter {
  if [type] == "suricata" {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    ruby {
      code => "if event['event_type'] == 'fileinfo'; event['fileinfo']['type']=event['fileinfo']['magic'].to_s.split(',')[0]; end;" 
    }
    mutate {
      rename => [ "src_ip", "SrcIP" ]
      rename => [ "dest_ip", "DstIP" ]
      rename => [ "src_port", "SrcPort" ]
      rename => [ "dest_port", "DstPort" ]
    }

    if [SrcIP]  {
      geoip {
        source => "SrcIP" 
        target => "geoip" 
        #database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat" 
        add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
        add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
      }
      mutate {
        convert => [ "[geoip][coordinates]", "float" ]
      }
      if ![geoip.ip] {
        if [DstIP]  {
          geoip {
            source => "DstIP" 
            target => "geoip" 
            #database => "/opt/logstash/vendor/geoip/GeoLiteCity.dat" 
            add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
            add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
          }
          mutate {
            convert => [ "[geoip][coordinates]", "float" ]
          }
        }
      }
    }
  }
}

output { 
  #stdout { codec => rubydebug }
  if [type] == "suricata" {
    elasticsearch {
      #protocol => http
    }
  }
}
