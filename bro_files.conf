# Author: Justin Henderson
# Email: jhenderson@tekrefresh.comes
# Last Update: 5/5/2016
#
# This conf file is based on accepting logs for files.log from Bro systems
input {
  file {
    type => "bro_files"
    sincedb_path => "/var/tmp/.bro_files_sincedb" 
    # Edit the following path to reflect the location of your log files. You can also change the extension if you use something else
    path => "/nsm/bro/logs/current/files.log"
  }
}

filter {
  if [type] == "bro_files" {
    # This is the initial parsing of the log
    csv {
      columns => ["ts","fuid","SourceIP","DestinationIP","conn_uids","Source","Depth","Analyzers","MIMEType","FileName","Duration","local_orig","is_orig","SeenBytes","TotalBytes","MissingBytes","OverflowBytes","TimedOut","parent_fuid","md5","sha1","sha256","Extracted"]
      separator => "	"
    }
    # Replace the host field with the host found in the bro log
    if [bro_host] {
      mutate {
        replace => [ "host", "%{bro_host}" ]
      }
    }
    # I renamed conn_uids to uid so that it is easy to pivot to all things tied to a connection
    mutate {
       rename => [ "conn_uids", "uid" ]
    }
    # If TotalBytes is set to "-" change it to 0 so it is an integer
    if [TotalBytes] == "-" {
      mutate {
        replace => [ "TotalBytes", "0" ]
      }
    }
    # If SeenBytes is set to "-" change it to 0 so it is an integer
    if [SeenBytes] == "-" {
      mutate {
        replace => [ "SeenBytes", "0" ]
      }
    }
    # If MissingBytes is set to "-" change it to 0 so it is an integer
    if [MissingBytes] == "-" {
      mutate {
        replace => [ "MissingBytes", "0" ]
      }
    }
    # If OverflowBytes is set to "-" change it to 0 so it is an integer
    if [OverflowBytes] == "-" {
      mutate {
        replace => [ "OverflowBytes", "0" ]
      }
    }
    # I recommend changing the field types below to integer so searches can do greater than or less than
    # and also so math functions can be ran against them
    mutate {
      convert => [ "TotalBytes", "integer" ]
      convert => [ "Duration", "float" ]
      convert => [ "Depth", "integer" ]
      convert => [ "SeenBytes", "integer" ]
      convert => [ "MissingBytes", "integer" ]
      convert => [ "OverflowBytes", "integer" ]
    }
    date {
      match => [ "ts", "UNIX" ]
    }
  }
}

output {
  if [type] == "bro_files" {
    #stdout { codec => rubydebug }
    elasticsearch {
      # Due to the volume of bro logs I like to save them to a seperate index.  This makes it easy to change retention
      # You can uncomment the index line below if you would like all logs to be in the same logstash index
      index => "logstash-bro-%{+YYYY.MM.dd}"
    }
  }
}
