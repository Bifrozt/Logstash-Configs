input {
	tcp {
		port => 6003
		type => "BRO_files"
	}
}

filter {
	if [message] =~ /^#/ {
		drop {  }
	} else {
		if [type] == "BRO_files" {
			grok {
				match => [ "message", "(?<ts>(.*?))\t(?<fuid>(.*?))\t(?<tx_hosts>(.*?))\t(?<rx_hosts>(.*?))\t(?<conn_uids>(.*?))\t(?<source>(.*?))\t(?<depth>(.*?))\t(?<analyzers>(.*?))\t(?<mime_type>(.*?))\t(?<filename>(.*?))\t(?<duration>(.*?))\t(?<local_orig>(.*?))\t(?<is_orig>(.*?))\t(?<seen_bytes>(.*?))\t(?<total_bytes>(.*?))\t(?<missing_bytes>(.*?))\t(?<overflow_bytes>(.*?))\t(?<timedout>(.*?))\t(?<parent_fuid>(.*?))\t(?<md5>(.*?))\t(?<sha1>(.*?))\t(?<sha256>(.*?))\t(?<extracted>(.*))" ]
			}
			if [bro_host] {
				mutate {
					replace => [ "host", "%{bro_host}" ]
				}
			}
			mutate {
				rename => [ "conn_uids", "uid" ]
			}
			mutate {
				add_tag => [ "BRO" ]
			}
			mutate {
				convert => [ "id.orig_p", "integer" ]
				convert => [ "id.resp_p", "integer" ]
			}
			date {
				match => [ "ts", "UNIX" ]
			}
		}
	}
	
}

output {
	if [type] == "BRO_files" {
		elasticsearch {
			cluster => "heartland"
			protocol => "http"
			embedded => false
			index => "bro-%{+YYYY.MM.dd}"
		}
	}
}